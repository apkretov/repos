What benefit is provided by compiling in "Debug" mode (-O0 in gcc)? *

   Options That Control Optimization
       These options control various sorts of optimizations.

       Without any optimization option, the compiler's goal is to reduce the cost of compilation and to make debugging produce the expected results.  Statements
       are independent: if you stop the program with a breakpoint between statements, you can then assign a new value to any variable or change the program counter
       to any other statement in the function and get exactly the results you expect from the source code.
	   
	   ...

       Most optimizations are only enabled if an -O level is set on the command line.  Otherwise they are disabled, even if individual optimization flags are
       specified.

       -O
	   ...
       -O0 Reduce compilation time and make debugging produce the expected results.  This is the default.

   Options for Debugging Your Program or GCC
       GCC has various special options that are used for debugging either your program or GCC:

       -g  Produce debugging information in the operating system's native format (stabs, COFF, XCOFF, or DWARF 2).  GDB can work with this debugging information.

           On most systems that use stabs format, -g enables use of extra debugging information that only GDB can use; this extra information makes debugging work
           better in GDB but probably makes other debuggers crash or refuse to read the program.  If you want to control for certain whether to generate the extra
           information, use -gstabs+, -gstabs, -gxcoff+, -gxcoff, or -gvms (see below).

           GCC allows you to use -g with -O.  The shortcuts taken by optimized code may occasionally produce surprising results: some variables you declared may
           not exist at all; flow of control may briefly move where you did not expect it; some statements may not be executed because they compute constant
           results or their values are already at hand; some statements may execute in different places because they have been moved out of loops.

           Nevertheless it proves possible to debug optimized output.  This makes it reasonable to use the optimizer for programs that might have bugs.

